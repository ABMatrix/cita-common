#!/usr/bin/env bash

set -xe

CARGO_COMMAND=

FEATURES_FOR_PUBSUB="rabbitmq zeromq kafka"
FEATURES_FOR_HASH="sha3hash blake2bhash sm3hash"
FEATURES_FOR_CRYPT="secp256k1 ed25519 sm2"
FEATURES_FOR_HASH_AND_CRYPT=("secp256k1 sha3hash" "ed25519 blake2bhash" "sm2 sm3hash")

function cargo_run_build () {
    CARGO_COMMAND="cargo test --no-run"
    cargo_run_all
    CARGO_COMMAND=
}

function cargo_run_test () {
    CARGO_COMMAND="cargo test --lib"
    cargo_run_all
    CARGO_COMMAND=
}

function cargo_run () {
    crate="${1}"
    shift 1
    currdir=$(pwd)
    cd "${crate}"
    ${CARGO_COMMAND} "$@"
    cd "${currdir}"
}

function cargo_run_all () {

    [ -z "${CARGO_COMMAND}" ] && exit 1

    cargo_run bigint

    cargo_run worker
    cargo_run error
    cargo_run logger
    cargo_run ethcore-io
    cargo_run ethcore-bloom-journal

    cargo_run rlp
    cargo_run rlp_derive
    cargo_run bloomable
    cargo_run ethkey

    cargo_run pubsub_rabbitmq
    cargo_run pubsub_zeromq
    cargo_run pubsub_kafka

    for features in ${FEATURES_FOR_PUBSUB}; do
        cargo_run pubsub --features "${features}"
    done

    cargo_run sha3
    cargo_run blake2b
    cargo_run sm3

    for crate in util authority_manage cita-secp256k1 cita-ed25519 cita-sm2; do
        for features in ${FEATURES_FOR_HASH}; do
            cargo_run ${crate} --features "${features}"
        done
    done

    for crate in cita-crypto libproto proof tx_pool engine_json; do
        for features in "${FEATURES_FOR_HASH_AND_CRYPT[@]}"; do
            cargo_run ${crate} --features "${features}"
        done
    done

    for pubsub_feature in ${FEATURES_FOR_PUBSUB}; do
        for features in "${FEATURES_FOR_HASH_AND_CRYPT[@]}"; do
            cargo_run engine --features "${features} ${pubsub_feature}"
        done
    done
}

function main () {
    cargo_run_$1
}

main "$@"
